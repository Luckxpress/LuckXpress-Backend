version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: luckxpress-postgres
    environment:
      POSTGRES_DB: luckxpress
      POSTGRES_USER: luckxpress
      POSTGRES_PASSWORD: luckxpress_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - luckxpress-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U luckxpress"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: luckxpress-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - luckxpress-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # LuckXpress Backend Application
  luckxpress-backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: luckxpress-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: jdbc:postgresql://postgres:5432/luckxpress
      DATABASE_USERNAME: luckxpress
      DATABASE_PASSWORD: luckxpress_dev_password
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: docker-development-jwt-secret-key-change-in-production
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - luckxpress-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  luckxpress-network:
    driver: bridge

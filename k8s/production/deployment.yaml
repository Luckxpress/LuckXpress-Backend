apiVersion: apps/v1
kind: Deployment
metadata:
  name: luckxpress-backend
  namespace: luckxpress-prod
  labels:
    app: luckxpress
    component: backend
    version: v1
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8081"
    prometheus.io/path: "/actuator/prometheus"
spec:
  replicas: 3
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: luckxpress
      component: backend
  template:
    metadata:
      labels:
        app: luckxpress
        component: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        sentry.io/release: "${BUILD_VERSION}"
    spec:
      serviceAccountName: luckxpress-backend
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      initContainers:
      - name: wait-for-db
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z postgres-service 5432; do echo waiting for db; sleep 2; done;']
      
      containers:
      - name: luckxpress
        image: ghcr.io/luckxpress/backend:${BUILD_VERSION}
        imagePullPolicy: Always
        
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: management
          containerPort: 8081
          protocol: TCP
        
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod,k8s"
        - name: JAVA_OPTS
          value: "-XX:MaxRAMPercentage=75 -XX:InitialRAMPercentage=50 -XX:+UseG1GC"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: luckxpress-db-secret
              key: url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: luckxpress-db-secret
              key: username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: luckxpress-db-secret
              key: password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: luckxpress-jwt-secret
              key: secret
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: luckxpress-sentry-secret
              key: dsn
        - name: SENTRY_ENVIRONMENT
          value: "production"
        
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: management
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: management
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
      
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: config
        configMap:
          name: luckxpress-config
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - luckxpress
              topologyKey: kubernetes.io/hostname

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: luckxpress-hpa
  namespace: luckxpress-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: luckxpress-backend
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
